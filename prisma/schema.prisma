// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  name           String
  password       String
  role           Role      @default(PILOT)
  isActive       Boolean   @default(true) @map("is_active")
  isAvailable    Boolean   @default(true) @map("is_available")
  flightExp      Int?      @default(0) @map("flight_exp")
  actualLocation String?
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime? @updatedAt @map("updated_at")
  Flight         Flight[]
  Route          Route[]

  @@map("TB_USERS")
}

model Route {
  id                String    @id @default(uuid())
  origin            String
  destiny           String
  durationEstimated String    @map("duration_estimated")
  departureDate     String    @map("departure_date")
  arriveDate        String    @map("arrival_date")
  isAvailable       Boolean   @default(true)
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime? @updatedAt @map("updated_at")
  deletedAt         DateTime? @map("deleted_at")
  isDeleted         Boolean   @default(false) @map("is_deleted")
  Flight            Flight[]
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            String

  @@map("TB_ROUTES")
}

model Flight {
  id           String       @id @default(uuid())
  routeId      String       @map("route_id")
  pilotId      String       @map("pilot_id")
  flightStatus FlightStatus @default(BOOKED) @map("flight_status")
  createdAt    DateTime     @default(now()) @map("created_at")
  updatedAt    DateTime?    @updatedAt @map("updated_at")
  deletedAt    DateTime?    @map("deleted_at")
  isDeleted    Boolean      @default(false) @map("is_deleted")

  route Route @relation(fields: [routeId], references: [id], onDelete: Cascade)
  user  User  @relation(fields: [pilotId], references: [id], onDelete: Cascade)

  @@map("TB_FLIGHTS")
}

enum Role {
  ADMIN
  PILOT
}

enum FlightStatus {
  BOOKED
  CANCELED
  DONE
}
